name: Render demo notebooks

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      trigger:
        type: boolean
        default: false
        description: 'Trigger a website rebuild if this run is successful'

jobs:
  render:
    runs-on: self-hosted
    container:
      image: firedrakeproject/firedrake-vanilla-default:dev-main
      options: --cap-add=SYS_ADMIN

    env:
      OMP_NUM_THREADS: 1
      GH_TOKEN: ${{ secrets.DISPATCH_TOKEN }}

    steps:
      - name: Install Git LFS
        run: |
          apt update
          apt install -y git-lfs
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install dependencies
        run: |
          apt install -y xvfb gmsh gh unzip

          uv venv --system-site-packages
          uv pip install nbval nbconvert jupytext siphash24 .[demos,optimisation] pygplates

      - name: Get Muller et al 2022 plate reconstructions
        run: |
          curl -fsSLO https://data.gadopt.org/github-actions/Muller_etal_2022_SE_1Ga_Opt_PlateMotionModel_v1.2.zip
          unzip Muller_etal_2022_SE_1Ga_Opt_PlateMotionModel_v1.2.zip -d demos/mantle_convection/gplates_global

      - name: Install Firedrake kernel
        run: |
          . .venv/bin/activate
          python3 -m ipykernel install --name firedrake --user

      - name: Set up for network namespacing
        run: |
          apt install -y uidmap iproute2
          . .venv/bin/activate
          nbconvert_location="$(which jupyter-nbconvert)"
          cp .testing/jupyter-nbconvert "$nbconvert_location"
          chmod +x "$nbconvert_location"

      - name: Convert notebooks
        run: |
          . .venv/bin/activate
          export DISPLAY=:99
          export PYVISTA_OFF_SCREEN=true
          export LIBGL_ALWAYS_SOFTWARE=true
          export GADOPT_RENDER=true
          Xvfb $DISPLAY -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3
          make -j convert_demos
          rm -rf rendered && mkdir rendered
          tar -xf demos/artifact.tar -C rendered
        env:
          GADOPT_LOGLEVEL: WARN
      - uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: notebooks
          path: rendered
          include-hidden-files: true
      - name: Trigger documentation build
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.trigger) }}
        run: |
          gh api --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/g-adopt/g-adopt.github.io/dispatches \
          -f "event_type=doc-rebuild" -F "client_payload[run_id]=${{ github.run_id }}"
