name: Run long regression tests

on:
  workflow_dispatch:
    inputs:
      system:
        description: "Select a system to test on"
        required: true
        type: choice
        options:
          - all
          - gadi
          - setonix

concurrency: longtest_environment

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      system_matrix: ${{ steps.build_matrix.outputs.system_matrix }}
    steps:
    - id: build_matrix
      run: |
        if [[ "${{ inputs.system }}" == "all" ]]; then
          export SYSTEMS='[ "gadi", "setonix" ]'
        else
          export SYSTEMS='[ "${{ inputs.system }}" ]'
        fi
        echo system_matrix=$( jq -cn --argjson sys "$SYSTEMS" '{system: $sys}' ) >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.system_matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Get system-specific variable names
        id: get_sys_vars
        run: |
          tmp=${{ matrix.system }}
          echo key_var=${tmp^^}_TESTING_KEY >> $GITHUB_OUTPUT
          echo hkey_var=${tmp^^}_HOST_KEY >> $GITHUB_OUTPUT
          echo user_var=${tmp^^}_USER >> $GITHUB_OUTPUT
          echo repo_path_var=${tmp^^}_REPO_PATH >> $GITHUB_OUTPUT
          echo gadopt_setup_var=${tmp^^}_GADOPT_SETUP >> $GITHUB_OUTPUT
          echo project_var=${tmp^^}_PROJECT >> $GITHUB_OUTPUT

      - name: Get system FQDN
        id: get_fqdn
        shell: bash
        run: |
          fqdn=$( grep ${{matrix.system}}: .github/systems.txt )
          echo "fqdn=${fqdn//${{matrix.system}}:/}" >> $GITHUB_OUTPUT

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets[steps.get_sys_vars.outputs.key_var] }}" > ~/.ssh/${{ matrix.system }}.key
          chmod 600 ~/.ssh/${{ matrix.system }}.key
          echo "${{ secrets[steps.get_sys_vars.outputs.hkey_var] }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          cat >>~/.ssh/config <<EOF
          Host ${{ matrix.system }}
            Hostname ${{ steps.get_fqdn.outputs.fqdn }}
            User ${{ secrets[steps.get_sys_vars.outputs.user_var] }}
            IdentityFile ~/.ssh/${{ matrix.system }}.key
          EOF

      - name: Sync repository to ${{matrix.system}}
        shell: bash
        run: |
          rsync -avz --delete --exclude=/.git/ --exclude=/.github/ ./ ${{matrix.system}}:${{ secrets[steps.get_sys_vars.outputs.repo_path_var] }}

      - name: Run test cases
        id: run_tests
        run: |
          ssh ${{ matrix.system }} "cd ${{ secrets[steps.get_sys_vars.outputs.repo_path_var] }} && source ${{ secrets[steps.get_sys_vars.outputs.gadopt_setup_var] }} && make -j longtest gadopt_checkout=${{ secrets[steps.get_sys_vars.outputs.repo_path_var] }} gadopt_setup=${{ secrets[steps.get_sys_vars.outputs.gadopt_setup_var] }} project=${{ secrets[steps.get_sys_vars.outputs.project_var] }}"

      - name: Test results
        if: ${{ success() }}
        run: |
          ssh ${{ matrix.system }} "cd ${{ secrets[steps.get_sys_vars.outputs.repo_path_var] }} && source ${{ secrets[steps.get_sys_vars.outputs.gadopt_setup_var] }} && python3 -m pytest -m longtest --junit-xml=test_results.xml --ignore=tests/unit tests"

      - name: Retrieve test results
        if: ${{ !cancelled() }}
        run: |
          scp ${{ matrix.system }}:${{ secrets[steps.get_sys_vars.outputs.repo_path_var] }}/test_results.xml .

      - name: Pytest report
        uses: mikepenz/action-junit-report@v4
        if: ${{ !cancelled() }}
        with:
          check_name: Test suite report
          report_paths: test_results.xml
          include_passed: true
          annotate_only: true

      - name: Get error output
        if: ${{ failure() }}
        run: |
          ssh ${{ matrix.system }} "cd ${{ secrets[steps.get_sys_vars.outputs.repo_path_var] }} && make longtest_output"
